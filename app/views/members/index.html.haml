#search_for_members.well
  %h3= t(:search_for_members)
  = form_tag '/members/search' do
    %select{:name => 'category', :style=>'width:180px;float:left;margin-right:20px;'}
      - Member.fields.each do |name, field|
        - # Just a hack to 'order' searchable fields hash with Ruby 1.8
        - if !params[:category]
          %option{:value => name, :selected => (field == 'first_name')}= t(name)
        - else
          %option{:value => name, :selected => params[:category] == name}= t(name)

    %input{:type => 'text', :name => 'keywords', :value => params[:keywords]}
    = submit_tag t(:search), :class => 'btn  btn-warning'
    %p
      = radio_button_tag 'is_active', 'true', (params[:is_active] == 'true')
      = t('active_members')
      = radio_button_tag 'is_active', 'false', (params[:is_active] == 'false')
      = t('inactive_members')
      = radio_button_tag 'is_active', 'all', (params[:is_active] == 'all' || !params[:is_active])
      = t('all_members')

#members_list
  - @members.each do |member|
    .member_resume
      .member_avatar
        %a{:href => member_path(member.id)}
          = avatar(member, '100x75')

      %span= link_to member.first_name, member_path(member.id)

  .clear{:style => 'height:20px;'}

- if is_admin
  %a{:href => '#creation_modal', :class => 'label label-important', :data => {'toggle' => 'modal'}, :style => 'margin-left:5px;'}
    = t(:create_new_member)

  = render :partial => '/modals/member_creation_modal'

